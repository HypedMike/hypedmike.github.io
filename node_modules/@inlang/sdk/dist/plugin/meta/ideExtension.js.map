{"version":3,"file":"ideExtension.js","sourceRoot":"/","sources":["plugin/meta/ideExtension.ts"],"names":[],"mappings":"","sourcesContent":["// Basic structure for a position in the document\ninterface Position {\n\tline: number;\n\tcharacter: number;\n}\n\n// Basic structure for a message reference match\ninterface MessageReferenceMatch {\n\tbundleId: string;\n\tposition: {\n\t\tstart: Position;\n\t\tend: Position;\n\t};\n}\n\n// Main IDE extension configuration schema\ninterface IdeExtensionConfigSchema {\n\t/**\n\t * Defines matchers for message references inside the code.\n\t *\n\t * @param args - Represents the data to conduct the search on.\n\t * @returns A promise with matched message references.\n\t */\n\tmessageReferenceMatchers: Array<\n\t\t(args: { documentText: string }) => Promise<MessageReferenceMatch[]>\n\t>;\n\n\t/**\n\t * Defines options to extract messages.\n\t */\n\textractMessageOptions: Array<{\n\t\t/**\n\t\t * Function which is called when the user finishes the message extraction command.\n\t\t *\n\t\t * @param args - Contains messageId and selection.\n\t\t * @returns The code which is inserted into the document.\n\t\t */\n\t\tcallback: (args: { bundleId: string; selection: string }) => {\n\t\t\tbundleId: string;\n\t\t\tmessageReplacement: string;\n\t\t};\n\t}>;\n\n\t/**\n\t * An array of Visual Studio Code DocumentSelectors.\n\t *\n\t * The document selectors specify for which files/programming languages\n\t * (typescript, svelte, etc.) the extension should be activated.\n\t *\n\t * See https://code.visualstudio.com/api/references/document-selector\n\t */\n\tdocumentSelectors?: Array<{ language?: string }>;\n}\n\n// Export the type for external use\nexport type IdeExtensionConfig = IdeExtensionConfigSchema;\n"]}