{"version":3,"file":"cache.js","sourceRoot":"/","sources":["plugin/cache.ts"],"names":[],"mappings":"AAEA,SAAS,MAAM,CAAC,GAAW;IAC1B,MAAM,KAAK,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAE5C,mDAAmD;IACnD,uCAAuC;IACvC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CACxB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CACd,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,cAAkB,CAAC,EAC/D,qBAA2B,CAC3B,CAAC;IAEF,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC1B,CAAC;AAED,KAAK,UAAU,mBAAmB,CACjC,SAAiB,EACjB,GAAQ;IAER,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAG,kBAAkB,UAAU,EAAE,CAAC;IAEhD,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,EAAE;SACvB,UAAU,CAAC,MAAM,CAAC;SAClB,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC;SAC5B,SAAS,EAAE;SACX,gBAAgB,EAAE,CAAC;IAErB,IAAI,IAAI,EAAE,CAAC;QACV,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IACD,OAAO,SAAS,CAAC;AAClB,CAAC;AAED,KAAK,UAAU,kBAAkB,CAChC,SAAiB,EACjB,aAAqB,EACrB,GAAQ;IAER,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAG,kBAAkB,UAAU,EAAE,CAAC;IAEhD,MAAM,GAAG,CAAC,EAAE;SACV,UAAU,CAAC,MAAM,CAAC;SAClB,MAAM,CAAC;QACP,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC;KAC7C,CAAC;QACF,mBAAmB;SAClB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,CAClB,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CACjE;SACA,OAAO,EAAE,CAAC;AACb,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,SAAS,CACxB,YAA8C,EAC9C,GAAQ;IAER,OAAO,KAAK,EAAE,GAAW,EAAE,EAAE;QAC5B,IAAI,CAAC;YACJ,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;YAC7C,MAAM,kBAAkB,CAAC,GAAG,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;YACjD,OAAO,YAAY,CAAC;QACrB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,+CAA+C;YAC/C,MAAM,WAAW,GAAG,MAAM,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxD,IAAI,WAAW,EAAE,CAAC;gBACjB,OAAO,WAAW,CAAC;YACpB,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,CAAC;YACT,CAAC;QACF,CAAC;IACF,CAAC,CAAC;AACH,CAAC","sourcesContent":["import type { Lix } from \"@lix-js/sdk\";\n\nfunction escape(url: string) {\n\tconst bytes = new TextEncoder().encode(url);\n\n\t// 64-bit FNV1a hash to make the file-names shorter\n\t// https://en.wikipedia.org/wiki/FNV-1a\n\tconst hash = bytes.reduce(\n\t\t(hash, byte) =>\n\t\t\tBigInt.asUintN(64, (hash ^ BigInt(byte)) * 1_099_511_628_211n),\n\t\t14_695_981_039_346_656_037n\n\t);\n\n\treturn hash.toString(36);\n}\n\nasync function readModuleFromCache(\n\tmoduleURI: string,\n\tlix: Lix\n): Promise<string | undefined> {\n\tconst moduleHash = escape(moduleURI);\n\tconst filePath = `/cache/plugins/${moduleHash}`;\n\n\tconst file = await lix.db\n\t\t.selectFrom(\"file\")\n\t\t.where(\"path\", \"=\", filePath)\n\t\t.selectAll()\n\t\t.executeTakeFirst();\n\n\tif (file) {\n\t\treturn new TextDecoder().decode(file.data);\n\t}\n\treturn undefined;\n}\n\nasync function writeModuleToCache(\n\tmoduleURI: string,\n\tmoduleContent: string,\n\tlix: Lix\n): Promise<void> {\n\tconst moduleHash = escape(moduleURI);\n\tconst filePath = `/cache/plugins/${moduleHash}`;\n\n\tawait lix.db\n\t\t.insertInto(\"file\")\n\t\t.values({\n\t\t\tpath: filePath,\n\t\t\tdata: new TextEncoder().encode(moduleContent),\n\t\t})\n\t\t// update the cache\n\t\t.onConflict((oc) =>\n\t\t\toc.doUpdateSet({ data: new TextEncoder().encode(moduleContent) })\n\t\t)\n\t\t.execute();\n}\n\n/**\n * Implements a \"Network-First\" caching strategy.\n */\nexport function withCache(\n\tmoduleLoader: (uri: string) => Promise<string>,\n\tlix: Lix\n): (uri: string) => Promise<string> {\n\treturn async (uri: string) => {\n\t\ttry {\n\t\t\tconst moduleAsText = await moduleLoader(uri);\n\t\t\tawait writeModuleToCache(uri, moduleAsText, lix);\n\t\t\treturn moduleAsText;\n\t\t} catch (e) {\n\t\t\t// network fetch failed, try to read from cache\n\t\t\tconst cacheResult = await readModuleFromCache(uri, lix);\n\t\t\tif (cacheResult) {\n\t\t\t\treturn cacheResult;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t};\n}\n"]}