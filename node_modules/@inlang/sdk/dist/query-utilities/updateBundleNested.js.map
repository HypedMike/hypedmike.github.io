{"version":3,"file":"updateBundleNested.js","sourceRoot":"/","sources":["query-utilities/updateBundleNested.ts"],"names":[],"mappings":"AAMA,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EACtC,EAAgC,EAChC,MAGC,EACe,EAAE;IAClB,MAAM,EAAE;SACN,WAAW,CAAC,QAAQ,CAAC;SACrB,GAAG,CAAC,MAAM,CAAC;SACX,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC;SAC3B,OAAO,EAAE,CAAC;IAEZ,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;QACvC,MAAM,EAAE;aACN,WAAW,CAAC,SAAS,CAAC;aACtB,GAAG,CAAC,OAAO,CAAC;aACZ,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC;aAC5B,OAAO,EAAE,CAAC;QAEZ,KAAK,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;YACxC,MAAM,EAAE;iBACN,WAAW,CAAC,SAAS,CAAC;iBACtB,GAAG,CAAC,OAAO,CAAC;iBACZ,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC;iBAC5B,OAAO,EAAE,CAAC;QACb,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { Kysely } from \"kysely\";\nimport type {\n\tBundleNestedUpdate,\n\tInlangDatabaseSchema,\n} from \"../database/schema.js\";\n\nexport const updateBundleNested = async (\n\tdb: Kysely<InlangDatabaseSchema>,\n\tbundle: BundleNestedUpdate & {\n\t\tid: string;\n\t\tmessages: { id: string; variants: { id: string }[] }[];\n\t}\n): Promise<void> => {\n\tawait db\n\t\t.updateTable(\"bundle\")\n\t\t.set(bundle)\n\t\t.where(\"id\", \"=\", bundle.id)\n\t\t.execute();\n\n\tfor (const message of bundle.messages) {\n\t\tawait db\n\t\t\t.updateTable(\"message\")\n\t\t\t.set(message)\n\t\t\t.where(\"id\", \"=\", message.id)\n\t\t\t.execute();\n\n\t\tfor (const variant of message.variants) {\n\t\t\tawait db\n\t\t\t\t.updateTable(\"variant\")\n\t\t\t\t.set(variant)\n\t\t\t\t.where(\"id\", \"=\", variant.id)\n\t\t\t\t.execute();\n\t\t}\n\t}\n};\n"]}